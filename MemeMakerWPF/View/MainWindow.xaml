<c:ExtendedWindow x:Class="MemeMakerWPF.View.MainWindow"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:local="clr-namespace:MemeMakerWPF.View"
                xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
                xmlns:c="clr-namespace:MemeMakerWPF.Utility.Controls"
                xmlns:convert="clr-namespace:MemeMakerWPF.Utility.Converters"
                xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                xmlns:vm="clr-namespace:MemeMakerWPF.ViewModel"
                xmlns:res="clr-namespace:MemeMakerWPF.Utility.Resources"
                mc:Ignorable="d" 
                x:Name="window" DialogIdentifier="MainWindow"
                Style="{StaticResource FullWindow}" 
                Title="{x:Static res:Labels.AppName}" 
                Height="500" Width="1000">

    <Window.Resources>
        <convert:CanvasSizeConverter x:Key="CanvasSizeConverter"/>
        <convert:CaptionWidthConverter x:Key="WidthConverter"/>
    </Window.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding OnLoad}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="SizeChanged">
            <i:InvokeCommandAction Command="{Binding RefreshSizes}">
                <i:InvokeCommandAction.CommandParameter>
                    <MultiBinding Converter="{StaticResource CanvasSizeConverter}">
                        <Binding ElementName="mainCanvas" Path="ActualWidth"/>
                        <Binding ElementName="mainCanvas" Path="ActualHeight"/>
                    </MultiBinding>
                </i:InvokeCommandAction.CommandParameter>
            </i:InvokeCommandAction>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <c:WindowBeam Header="{Binding ElementName=window, Path=Title}"/>

        <Grid x:Name="ContentPanel" Grid.Row="1">
            <Grid Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="220" MaxWidth="260"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>

                <Border Grid.Column="0" BorderThickness="2" CornerRadius="10"
                        BorderBrush="{StaticResource BorderColor}">
                    <Grid>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>


                            <Button Grid.Column="0" ToolTip="Add Background Image"
                                Command="{Binding SetBackground}" Style="{StaticResource AccentButton}"
                                Padding="0">

                                <Button.CommandParameter>
                                    <MultiBinding Converter="{StaticResource CanvasSizeConverter}">
                                        <Binding ElementName="mainCanvas" Path="ActualWidth"/>
                                        <Binding ElementName="mainCanvas" Path="ActualHeight"/>
                                    </MultiBinding>
                                </Button.CommandParameter>

                                <StackPanel Orientation="Horizontal">
                                    <material:PackIcon Kind="ImageAdd" VerticalAlignment="Center"/>
                                    <Separator Margin="2"/>
                                    <TextBlock Text="Add image" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button>

                            <Button Grid.Column="1" ToolTip="Add caption" Style="{StaticResource AccentButton}"
                                Command="{Binding AddCaption}" Padding="0">
                                <StackPanel Orientation="Horizontal">
                                    <material:PackIcon Kind="FormatAnnotationAdd" VerticalAlignment="Center"/>
                                    <Separator Margin="2"/>
                                    <TextBlock Text="Add text" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button>

                        </Grid>

                        <ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Auto">
                            <ItemsControl ItemsSource="{Binding CaptionTexts}">
                                <ItemsControl.Resources>
                                    <DataTemplate DataType="{x:Type vm:CaptionTextBoxViewModel}">

                                        <Border Padding="0 3 0 3" BorderBrush="{StaticResource BorderColor}" BorderThickness="0 0 0 1">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="4*"/>
                                                    <ColumnDefinition MinWidth="35" MaxWidth="70"/>
                                                    <ColumnDefinition Width="35"/>
                                                </Grid.ColumnDefinitions>

                                                <TextBox
                                                 Text="{Binding CaptionText, UpdateSourceTrigger=PropertyChanged}" 
                                                 material:HintAssist.Hint="{Binding CaptionNumber, FallbackValue=Caption}"
                                                 Margin="5" AcceptsReturn="True"/>

                                                <WrapPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                                                    <Button Style="{StaticResource MaterialDesignFloatingActionButton}"
                                                    Padding="0" Width="25" Height="25" Command="{Binding FontSizeUp}"
                                                    ToolTip="Increase font size" Margin="3">
                                                        <material:PackIcon Kind="FormatFontSizeIncrease"/>
                                                    </Button>

                                                    <Button Style="{StaticResource MaterialDesignFloatingActionButton}"
                                                    Padding="0" Width="25" Height="25" Command="{Binding FontSizeDown}"
                                                    ToolTip="Decrease font size" Margin="3">
                                                        <material:PackIcon Kind="FormatFontSizeDecrease"/>
                                                    </Button>

                                                </WrapPanel>

                                                <Button Grid.Column="2" Style="{StaticResource FloatingRedButton}" Padding="0"
                                                Width="25" Height="25" Command="{Binding ElementName=window, Path=DataContext.RemoveCaption}" CommandParameter="{Binding .}"
                                                ToolTip="Remove caption" Margin="3">
                                                    <material:PackIcon Kind="Remove"/>
                                                </Button>

                                            </Grid>
                                        </Border>

                                    </DataTemplate>
                                </ItemsControl.Resources>
                            </ItemsControl>
                        </ScrollViewer>

                        <Button Grid.Row="4" ToolTip="Generate meme"
                            Command="{Binding GenerateMeme}" CommandParameter="{Binding ElementName=mainCanvas}">
                            <StackPanel Orientation="Horizontal">
                                <material:PackIcon Kind="ContentSave" VerticalAlignment="Center"/>
                                <Separator Margin="2"/>
                                <TextBlock Text="Generate Meme" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button>

                    </Grid>
                </Border>

                <Canvas Grid.Column="2" x:Name="mainCanvas" ClipToBounds="True">

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseEnter">
                            <i:InvokeCommandAction Command="{Binding MouseOverCanvas}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseLeave">
                            <i:InvokeCommandAction Command="{Binding MouseLeftCanvas}">
                                <i:InvokeCommandAction.CommandParameter>
                                    <MultiBinding Converter="{StaticResource CanvasSizeConverter}">
                                        <Binding ElementName="mainCanvas" Path="ActualWidth"/>
                                        <Binding ElementName="mainCanvas" Path="ActualHeight"/>
                                    </MultiBinding>
                                </i:InvokeCommandAction.CommandParameter>
                            </i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <Canvas.Background>
                        <ImageBrush ImageSource="{Binding Background}" Stretch="Uniform"/>
                    </Canvas.Background>

                    <ItemsControl ItemsSource="{Binding CaptionTexts}">

                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas x:Name="childCanvas"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type vm:CaptionTextBoxViewModel}">

                                <ContentControl Template="{StaticResource DesignerItemTemplate}"
                                                Width="{Binding ElementName=mainCanvas, Path=ActualWidth, Converter={StaticResource WidthConverter}}" 
                                                Height="50">

                                    <Border>
                                        <Border>
                                            <Border>

                                                <TextBlock Text="{Binding CaptionText, UpdateSourceTrigger=PropertyChanged}" 
                                                           TextWrapping="WrapWithOverflow" TextAlignment="Center"
                                                           FontSize="{Binding FontSize,FallbackValue=30}" FontFamily="Impact" Foreground="White">
                                                    <TextBlock.Effect>
                                                        <DropShadowEffect RenderingBias="Performance" 
                                                                          Direction="0"
                                                                          BlurRadius="0" 
                                                                          ShadowDepth="1.5"/>
                                                    </TextBlock.Effect>

                                                </TextBlock>

                                                <Border.Effect>
                                                    <DropShadowEffect RenderingBias="Performance" 
                                                                      Direction="90"
                                                                      BlurRadius="0" 
                                                                      ShadowDepth="1.5"/>
                                                </Border.Effect>

                                            </Border>
                                            <Border.Effect>
                                                <DropShadowEffect RenderingBias="Performance" 
                                                                  Direction="180"
                                                                  BlurRadius="0" 
                                                                  ShadowDepth="1.5"/>
                                            </Border.Effect>

                                        </Border>
                                        <Border.Effect>
                                            <DropShadowEffect RenderingBias="Performance" 
                                                              Direction="270"
                                                              BlurRadius="0" 
                                                              ShadowDepth="1.5"/>
                                        </Border.Effect>

                                    </Border>

                                </ContentControl>

                            </DataTemplate>
                        </ItemsControl.ItemTemplate>

                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="{x:Type ContentPresenter}">
                                <Setter Property="Canvas.Top" Value="{Binding TopPos}"/>
                                <Setter Property="Canvas.Left" Value="{Binding LeftPos}"/>
                            </Style>
                        </ItemsControl.ItemContainerStyle>

                    </ItemsControl>

                </Canvas>

            </Grid>
        </Grid>

    </Grid>

</c:ExtendedWindow>
